#!/usr/bin/env python # -* - coding: utf-8-*
import math
import random
import re
import statistics
def first1():
    num = int(input("Введите число: "))
    count = 0
    for i in range(1, num+1):
        if num % i == 0:
            if i % 3 != 0:
                count += 1
    return num, count
def first2():
    num = int(input("Введите число: "))
    min = 9
    for i in str(num):
        if int(i) < min:
            min = int(i)
    return min
def first3():
    num = int(input("Введите число: "))
    s = 0
    p = 1
    for i in str(num):
        s += int(i)
        p *= int(i)
    count = 0
    for i in range(1, num+1):
        if num % i == 0:
            if math.gcd(s, i) == 1:
                if math.gcd(p, i) != 1:
                    count += i
    return s, p, count
def two(string):
    return "".join(random.sample(string, len(string)))
def three(s):
    s = s.lower().replace(' ', '')
    if s == s[::-1]:
        return True
    return False

    ##############
    # MAIN BLOCK #
    ##############

print("Выберите номер задания от 1 до 19")
nn = int(input("Номер: "))
if nn == 1:
    print("Выберите пункт:")
    print(" 1 - Найти количество делителей числа, не делящихся на 3:\n 2 - Найти минимальную нечетную цифру числа:\n 3 - Найти сумму всех делителей числа, взаимно простых с суммой цифр числа и не взаимно простых с произведением цифр числа:")
    pp = int(input("Пункт: "))
    if pp == 1:
        numm, countt = first1()
        print("Количество делителей числа", numm, "равно", countt)
    elif pp == 2:
        minn = first2()
        print("Минимальная цифра числа", minn)
    elif pp == 3:
        sf, pf, countt = first3()
        print("Сумма делителей взаимно простых с", sf, "и не взаимно простых с", pf, "равно", countt)
    else:
        print("Не верный номер пункта")
if nn == 2:
    print("Задание: Дана строка. Необходимо перемешать все символы строки в случайном порядке.\n")
    s = input("Введите строку: ")
    randomized_string = two(s)
    print("Перемешанная строка:", randomized_string)
if nn == 3:
    print("Задание: Дана строка, состоящая из символов латиницы. Необходимо проверить, образуют ли прописные символы этой строки палиндром.\n")
    s = input("Введите строку: ")
    if three(s):
        print(s, "является палиндромом")
    else:
        print(s, "не является палиндромом")
if nn == 4:
    print("Задание: Дана строка в которой записаны слова через пробел. Необходимо упорядочить слова по количеству букв в каждом слове.\n")
    sf = input("Введите текст: ").split()
    print("Упорядоченные по длине слова:", *four(sf))
if nn == 5:
    print("Задание: Дана строка. Необходимо найти все даты, которые описаны в виде 31 февраля 2007.\n")
    sf = input("Введите строку: ")
    print("Все даты нужного вида:",five(sf))
if nn == 6:
    print("Задание: Дана строка. Необходимо найти наибольшее количество идущих подряд символов кириллицы.\n")
    sf = input("Введите строку: ")
    print("Максимальное количество символов кириллицы подряд равняется:", six(sf))
if nn == 7:
    print("Задание: Дана строка. Необходимо найти минимальное из имеющихся в ней натуральных чисел.\n")
    sf = input("Введите текст: ").split()
    minn = min(seven(sf))
    print("Минимальное натуральное число:", minn)
if nn == 8:
    print("Задание: Дана строка. Необходимо найти наибольшее количество идущих подряд цифр.")
    sf = input("Введите текст: ")
    print("Максимальное количество идуших подряд цифр:", eight(sf))
if nn == 9:
    print('Задание: Прочитать список строк с клавиатуры. Упорядочить по длине строки.')
    print(nine())
if nn == 10:
    print('Задание: Дан список строк с клавиатуры. Упорядочить по количеству слов в строке\n')
    print(ten())
if nn == 11:
    print('Задание: Отсортировать строки в порядке увеличения среднего веса ASCII-кода символа строки\n')
    print(eleven())
if nn == 12:
    print('Задание: Отсортировать строки в порядке увеличения медианного значения выборки строк (прошлое медианное значение удаляется из выборки и производится поиск нового медианного значения)\n')
    print(twelve())
if nn == 13:
    print('Задание: Отсортировать строки в порядке увеличения квадратичного отклонения между наибольшим ASCII-кодом символа строки и разницы в ASCII-кодах пар зеркально расположенных символов строки (относительно ее середины)')
    thirteen()
if nn == 14:
    print('Задание: Отсортировать строки в порядке увеличение квадратичного отклонения частоты встречаемости самого распространенного символа в наборе строк от частоты его встречаемости в данной строке.')
    fourteen()
if nn == 15:
    print('Задание: Дан целочисленный массив, в котором лишь один элемент отличается от остальных. Необходимо найти значение этого элемента.')
    fiftheen()
if nn == 16:
    print('Задание: Дан целочисленный массив. Необходимо найти два наименьших элемента.')
    sixtheen()
if nn == 17:
    print('Задание: Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наиболее близок к данному числу')
    r = float(input("Введите вещественное число: "))
    arr = []
    n = int(input("Введите количество элементов массива: "))
    for i in range(n):
        s = float(input("Введите вещественный элемент массива: "))
        arr.append(s)
    seventheen(r,arr)
if nn == 18:
    print('Для введенного списка положительных чисел построить список всех положительных делителей элементов списка без повторений')
    eighteen()
if nn == 19:
    print('Дан список. Построить новый список из квадратов неотрицательных чисел, меньших 100 и встречающихся в массиве больше 2 раз.')
    ninetheen()
